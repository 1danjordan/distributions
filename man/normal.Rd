% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/normal.R
\name{normal}
\alias{normal}
\title{Create a normal distribution}
\usage{
normal(mu = 0, sigma = 1)
}
\arguments{
\item{mu}{The location parameter, written \eqn{\mu} in textbooks,
which is also the mean of the distribution. Can be any real number.
Defaults to \code{0}.}

\item{sigma}{The scale parameter, written \eqn{\sigma} in textbooks,
which is also the \strong{standard deviation} of the distribution. Can be any
positive number. Defaults to \code{1}. If you would like a normal
distribution with \strong{variance} \eqn{\sigma^2}, be sure to take the
square root, as this is a common source of errors.}
}
\value{
A \code{normal} object.
}
\description{
The normal distribution is ubiquituous in statistics, partially because
of the central limit theorem, which states that sums of i.i.d. random
variables eventually become normal. Linear transformations of normal
random variables result in new random variables that are also normal. If
you are taking an intro stats course, you'll likely use the normal
distribution for Z-tests and in simple linear regression. Under
regularity conditions, maximum likelihood estimators are
asymptotically normal. The normal distribution is also called the
gaussian distribution.
}
\details{
We recommend reading this documentation on
\url{https://alexpghayes.github.io/distributions}, where the math
will render with additional detail and much greater clarity.

In the following, let \eqn{X} be a normal random variable with mean
\code{mu} = \eqn{\mu} and standard deviation \code{sigma} = \eqn{\sigma}.

\strong{Support}: \eqn{\mathbb{R}}{R}, the set of all real numbers

\strong{Mean}: \eqn{\mu}

\strong{Variance}: \eqn{\sigma^2}

\strong{Probability density function (p.d.f)}:

\deqn{
    f(x) = \frac{1}{\sqrt{2 \pi \sigma^2}} e^{-(x - \mu)^2 / 2 \sigma^2}
  }{
    f(x) = 1 / (2 \pi \sigma^2) exp(-(x - \mu)^2 / (2 \sigma^2))
  }

\strong{Cumulative distribution function (c.d.f)}:

The cumulative distribution function has the form

\deqn{
    F(t) = \int_{-\infty}^t \frac{1}{\sqrt{2 \pi \sigma^2}} e^{-(x - \mu)^2 / 2 \sigma^2} dx
  }{
    F(t) = integral_{-\infty}^t 1 / (2 \pi \sigma^2) exp(-(x - \mu)^2 / (2 \sigma^2)) dx
  }

but this integral does not have a closed form solution and must be
approximated numerically. The c.d.f. of a standard normal is sometimes
called the "error function". The notation \eqn{\Phi(t)} also stands
for the c.d.f. of a standard normal evaluated at \eqn{t}. Z-tables
list the value of \eqn{\Phi(t)} for various \eqn{t}.

\strong{Moment generating function (m.g.f)}:

\deqn{
    \mathbb{E}(e^{tX}) = e^{\mu t + \sigma^2 t^2 / 2}
  }{
    E(e^(tX)) = e^(\mu t + \sigma^2 t^2 / 2)
  }
}
\examples{

n <- normal(5, 2)
n

random(n, 10)
pdf(n, 2)
log_pdf(n, 2)
cdf(n, 4)
quantile(n, 0.7)

### example: calculating p-values for two-sided Z-test

# here the null hypothesis is H_0: mu = 3
# and we assume sigma = 2

# exactly the same as: Z <- normal(0, 1)
Z <- normal()

# data to test
x <- c(3, 7, 11, 0, 7, 0, 4, 5, 6, 2)
nx <- length(x)

# calculate the z-statistic
z_stat <- (mean(x) - 3) / (2 / sqrt(nx))
z_stat

# calculate the two-sided p-value
1 - cdf(Z, abs(z_stat)) + cdf(Z, -abs(z_stat))

# exactly equivalent to the above
2 * cdf(Z, -abs(z_stat))

# p-value for one-sided test
# H_0: mu <= 3   vs   H_A: mu > 3
1 - cdf(Z, z_stat)

# p-value for one-sided test
# H_0: mu >= 3   vs   H_A: mu < 3
cdf(Z, z_stat)

### example: calculating a 88 percent Z CI for a mean

# same `x` as before, still assume `sigma = 2`

# lower-bound
mean(x) - quantile(Z, 1 - 0.12 / 2) * 2 / sqrt(nx)

# upper-bound
mean(x) + quantile(Z, 1 - 0.12 / 2) * 2 / sqrt(nx)

# equivalent to
mean(x) + c(-1, 1) * quantile(Z, 1 - 0.12 / 2) * 2 / sqrt(nx)

# also equivalent to
mean(x) + quantile(Z, 0.12 / 2) * 2 / sqrt(nx)
mean(x) + quantile(Z, 1 - 0.12 / 2) * 2 / sqrt(nx)

### generating random samples and plugging in ks.test()

set.seed(27)

# generate a random sample
normal_sample <- random(normal(3, 7), 26)

# test if sample is normal(3, 7)
ks.test(normal_sample, pnorm, mean = 3, sd = 7)

# test if sample is gamma(8, 3) using base R pgamma()
ks.test(normal_sample, pgamma, shape = 8, rate = 3)


###

# note that the cdf() and quantile() functions are inverses
cdf(n, quantile(n, 0.7))
quantile(n, cdf(n, 7))

}
\seealso{
Other continuous distributions: \code{\link{beta}},
  \code{\link{cauchy}}, \code{\link{chi_square}},
  \code{\link{exponential}}, \code{\link{fisher_f}},
  \code{\link{gamma}}, \code{\link{poisson}},
  \code{\link{students_t}}, \code{\link{uniform}}
}
\concept{continuous distributions}
